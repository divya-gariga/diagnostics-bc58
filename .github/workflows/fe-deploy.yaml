name: frontend deployment
on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
jobs:
  build_mock_server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/mock_server/
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: docker login to github container registry
        uses: docker/login-action/@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: build mock-server
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bc58-data:latest
      - name: push mock-server
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bc58-data:latest

  build_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: docker login to github container registry
        uses: docker/login-action/@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: install dependencies
        run: |
          npm install --force
          npm install -g webpack
          npm run build
        env:
          BASE_URL: https://data.bc58.tk/
      - name: build frontend
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bc58-fe:latest
      - name: push frontend
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bc58-fe:latest

  deploy:
    needs: [build_mock_server, build_frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment/frontend
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: connect to eks cluster
        run: aws eks --region ${{ secrets.AWS_DEFAULT_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
      - name: create app
        run: bash deploy.sh
      - name: verify installation
        run: kubectl get all && kubectl get ingress
