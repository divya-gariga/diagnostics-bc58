name: micro-services deployment
on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
jobs:
  build_services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - working-directory: backend/api-gateway/
            image: bc58-api-gateway
          - working-directory: backend/service-registry/
            image: bc58-service-registry
          - working-directory: backend/appointments-service/
            image: bc58-appointments-service
          - working-directory: backend/labs-service/
            image: bc58-labs-service
          - working-directory: backend/patient-service/
            image: bc58-patient-service
          - working-directory: backend/reports-service/
            image: bc58-reports-service
          - working-directory: backend/users-service/
            image: bc58-users-service
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: docker login to github container registry
        uses: docker/login-action/@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: build image
        working-directory: ${{ matrix.working-directory}}
        run: |
          mvn clean install
          docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ matrix.image}}
      - name: push image
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ matrix.image}}

  deploy_services:
    needs: [build_services]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/deployments/
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: connect to eks cluster
        run: aws eks --region ${{ secrets.AWS_DEFAULT_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
      - name: create app
        run: |
          kubectl config set-context --current --namespace=bc58
          kubectl apply -f deploy.yaml
          kubectl apply -f service.yaml
          kubectl apply -f ingress.yaml
      - name: verify installation
        run: kubectl get all && kubectl get ingress
